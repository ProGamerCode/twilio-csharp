/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Video.V1.Room.Participant 
{

    /// <summary>
    /// ReadSubscribedTrackOptions
    /// </summary>
    public class ReadSubscribedTrackOptions : ReadOptions<SubscribedTrackResource> 
    {
        /// <summary>
        /// The room_sid
        /// </summary>
        public string PathRoomSid { get; }
        /// <summary>
        /// The subscriber_sid
        /// </summary>
        public string PathSubscriberSid { get; }
        /// <summary>
        /// The date_created_after
        /// </summary>
        public DateTime? DateCreatedAfter { get; set; }
        /// <summary>
        /// The date_created_before
        /// </summary>
        public DateTime? DateCreatedBefore { get; set; }
        /// <summary>
        /// The track
        /// </summary>
        public string Track { get; set; }
        /// <summary>
        /// The publisher
        /// </summary>
        public string Publisher { get; set; }
        /// <summary>
        /// The kind
        /// </summary>
        public SubscribedTrackResource.KindEnum Kind { get; set; }

        /// <summary>
        /// Construct a new ReadSubscribedTrackOptions
        /// </summary>
        /// <param name="pathRoomSid"> The room_sid </param>
        /// <param name="pathSubscriberSid"> The subscriber_sid </param>
        public ReadSubscribedTrackOptions(string pathRoomSid, string pathSubscriberSid)
        {
            PathRoomSid = pathRoomSid;
            PathSubscriberSid = pathSubscriberSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (DateCreatedAfter != null)
            {
                p.Add(new KeyValuePair<string, string>("DateCreatedAfter", Serializers.DateTimeIso8601(DateCreatedAfter)));
            }

            if (DateCreatedBefore != null)
            {
                p.Add(new KeyValuePair<string, string>("DateCreatedBefore", Serializers.DateTimeIso8601(DateCreatedBefore)));
            }

            if (Track != null)
            {
                p.Add(new KeyValuePair<string, string>("Track", Track.ToString()));
            }

            if (Publisher != null)
            {
                p.Add(new KeyValuePair<string, string>("Publisher", Publisher.ToString()));
            }

            if (Kind != null)
            {
                p.Add(new KeyValuePair<string, string>("Kind", Kind.ToString()));
            }

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// UpdateSubscribedTrackOptions
    /// </summary>
    public class UpdateSubscribedTrackOptions : IOptions<SubscribedTrackResource> 
    {
        /// <summary>
        /// The room_sid
        /// </summary>
        public string PathRoomSid { get; }
        /// <summary>
        /// The subscriber_sid
        /// </summary>
        public string PathSubscriberSid { get; }
        /// <summary>
        /// The track
        /// </summary>
        public string Track { get; set; }
        /// <summary>
        /// The publisher
        /// </summary>
        public string Publisher { get; set; }
        /// <summary>
        /// The kind
        /// </summary>
        public SubscribedTrackResource.KindEnum Kind { get; set; }
        /// <summary>
        /// The status
        /// </summary>
        public SubscribedTrackResource.StatusEnum Status { get; set; }

        /// <summary>
        /// Construct a new UpdateSubscribedTrackOptions
        /// </summary>
        /// <param name="pathRoomSid"> The room_sid </param>
        /// <param name="pathSubscriberSid"> The subscriber_sid </param>
        public UpdateSubscribedTrackOptions(string pathRoomSid, string pathSubscriberSid)
        {
            PathRoomSid = pathRoomSid;
            PathSubscriberSid = pathSubscriberSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (Track != null)
            {
                p.Add(new KeyValuePair<string, string>("Track", Track.ToString()));
            }

            if (Publisher != null)
            {
                p.Add(new KeyValuePair<string, string>("Publisher", Publisher.ToString()));
            }

            if (Kind != null)
            {
                p.Add(new KeyValuePair<string, string>("Kind", Kind.ToString()));
            }

            if (Status != null)
            {
                p.Add(new KeyValuePair<string, string>("Status", Status.ToString()));
            }

            return p;
        }
    }

}